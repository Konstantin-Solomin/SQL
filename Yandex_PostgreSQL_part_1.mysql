'''Задача:
Составьте сводную таблицу и выведите среднюю сумму инвестиций для стран, в которых есть стартапы, зарегистрированные в 2011, 2012 и 2013 годах. Данные за каждый год должны быть в отдельном поле. Отсортируйте таблицу по среднему значению инвестиций за 2011 год от большего к меньшему.

Решение:'''
WITH
y11 AS (SELECT country_code AS country,
              AVG(funding_total) AS year_2011
      FROM company
      WHERE EXTRACT(YEAR FROM founded_at) = 2011

      GROUP BY country),
y12 AS (SELECT country_code AS country,
              AVG(funding_total) AS year_2012
      FROM company
      WHERE EXTRACT(YEAR FROM founded_at) = 2012

      GROUP BY country),
y13 AS (SELECT country_code AS country,
              AVG(funding_total) AS year_2013
      FROM company
      WHERE EXTRACT(YEAR FROM founded_at) = 2013

      GROUP BY country)


SELECT y11.country,
        year_2011,
        year_2012,
        year_2013
FROM y11
JOIN y12 ON y11.country = y12.country
JOIN y13 ON y11.country = y13.country

ORDER BY year_2011 DESC
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Отберите данные по месяцам с 2010 по 2013 год, когда проходили инвестиционные раунды. Сгруппируйте данные по номеру месяца и получите таблицу, в которой будут поля:
номер месяца, в котором проходили раунды;
количество уникальных названий фондов из США, которые инвестировали в этом месяце;
количество компаний, купленных за этот месяц;
общая сумма сделок по покупкам в этом месяце.

Решение:'''
WITH
a AS (SELECT  EXTRACT(MONTH FROM acquired_at) AS months,
              COUNT(acquired_company_id) AS solds,
              SUM(price_amount) AS total
     FROM acquisition AS a
     WHERE EXTRACT(YEAR FROM acquired_at) between 2010 AND 2013
     GROUP BY months),
f AS (SELECT COUNT(DISTINCT f.id) AS funds,
             EXTRACT(MONTH FROM funded_at) AS months
     FROM fund AS f
     LEFT JOIN investment AS i ON f.id = i.fund_id
     LEFT JOIN funding_round AS fr ON fr.id = i.funding_round_id
     WHERE country_code = 'USA'
     AND EXTRACT(YEAR FROM funded_at) between 2010 AND 2013
     GROUP BY months)

SELECT a.months,
        funds,
        solds,
        total
FROM a
LEFT JOIN f ON f.months = a.months
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Выгрузите таблицу, в которую войдут названия компаний из категории social, получившие финансирование с 2010 по 2013 год включительно. Проверьте, что сумма инвестиций не равна нулю. Выведите также номер месяца, в котором проходил раунд финансирования.

Решение:'''
SELECT  c.name,
        --DATE_TRUNC('month', funded_at)::date AS month
        EXTRACT(MONTH FROM funded_at) AS month
FROM company AS c
LEFT JOIN funding_round AS f ON c.id = f.company_id
WHERE category_code = 'social'
AND raised_amount <> 0
AND EXTRACT(YEAR FROM funded_at) BETWEEN 2010 AND 2013
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Выгрузите таблицу, в которой будут такие поля:
название компании-покупателя;
сумма сделки;
название компании, которую купили;
сумма инвестиций, вложенных в купленную компанию;
доля, которая отображает, во сколько раз сумма покупки превысила сумму вложенных в компанию инвестиций, округлённая до ближайшего целого числа.
Не учитывайте те сделки, в которых сумма покупки равна нулю. Если сумма инвестиций в компанию равна нулю, исключите такую компанию из таблицы. 
Отсортируйте таблицу по сумме сделки от большей к меньшей, а затем по названию купленной компании в лексикографическом порядке. Ограничьте таблицу первыми десятью записями.

Решение:'''
WITH
b AS (SELECT name AS buyer,
      c.id AS company_id
     FROM company AS c
     JOIN acquisition AS a ON a.acquiring_company_id = c.id),
s AS (SELECT name AS seller,
      c.id AS company_id
     FROM company AS c
     JOIN acquisition AS a ON a.acquired_company_id = c.id),
i AS (SELECT funding_total AS invested_amount,
      c.id AS invest_id
     FROM company AS c
     JOIN acquisition AS a ON a.acquired_company_id = c.id)

SELECT DISTINCT buyer,
        price_amount,
        seller,
        invested_amount,
        ROUND(price_amount/invested_amount)
FROM acquisition AS a
LEFT JOIN b ON b.company_id = a.acquiring_company_id
LEFT JOIN s ON s.company_id = a.acquired_company_id
LEFT JOIN i ON i.invest_id = a.acquired_company_id
WHERE price_amount > 0
AND invested_amount > 0
ORDER BY price_amount DESC, seller
LIMIT 10c
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Составьте таблицу из полей:
name_of_fund — название фонда;
name_of_company — название компании;
amount — сумма инвестиций, которую привлекла компания в раунде.
В таблицу войдут данные о компаниях, в истории которых было больше шести важных этапов, а раунды финансирования проходили с 2012 по 2013 год включительно.

Решение:'''
WITH
f AS (SELECT name AS name_of_fund,
             id AS fund_id
     FROM fund),
c AS (SELECT name AS name_of_company,
             id AS company_id
     FROM company
     WHERE milestones > 6),
r AS (SELECT raised_amount AS amount,
             id AS round_id
     FROM funding_round
     WHERE EXTRACT(YEAR FROM funded_at) IN (2012,2013))


SELECT name_of_fund,
        name_of_company,
        amount
FROM investment AS i
JOIN c ON i.company_id = c.company_id
JOIN f ON f.fund_id = i.fund_id
JOIN r ON r.round_id = i.funding_round_id

-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Составьте список с уникальными названиями закрытых компаний, для которых первый раунд финансирования оказался последним.

Решение:'''
SELECT DISTINCT name
FROM company AS c
JOIN funding_round AS f ON c.id = f.company_id
WHERE status = 'closed'
    AND is_first_round  = 1
    AND is_last_round = 1
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Составьте список уникальных номеров сотрудников, которые работают в компаниях, отобранных в предыдущем задании.

Решение:'''
SELECT id
FROM people
WHERE company_id IN (SELECT DISTINCT c.id
        FROM company AS c
        JOIN funding_round AS f ON c.id = f.company_id
        WHERE status = 'closed'
            AND is_first_round  = 1
            AND is_last_round = 1)
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Составьте таблицу, куда войдут уникальные пары с номерами сотрудников из предыдущей задачи и учебным заведением, которое окончил сотрудник.

Решение:'''
SELECT DISTINCT p.id, instituition
FROM people AS p
JOIN education AS e ON p.id = e.person_id
WHERE company_id IN (SELECT DISTINCT c.id
        FROM company AS c
        JOIN funding_round AS f ON c.id = f.company_id
        WHERE status = 'closed'
            AND is_first_round  = 1
            AND is_last_round = 1)
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Посчитайте количество учебных заведений для каждого сотрудника из предыдущего задания. При подсчёте учитывайте, что некоторые сотрудники могли окончить одно и то же заведение дважды.

Решение:'''
SELECT  p.id,
        COUNT(instituition)
FROM people AS p
JOIN education AS e ON p.id = e.person_id
WHERE company_id IN (SELECT DISTINCT c.id
        FROM company AS c
        JOIN funding_round AS f ON c.id = f.company_id
        WHERE status = 'closed'
            AND is_first_round  = 1
            AND is_last_round = 1)
GROUP BY p.id
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Дополните предыдущий запрос и выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники разных компаний. Нужно вывести только одну запись, группировка здесь не понадобится.

Решение:'''
WITH
a AS (SELECT  p.id,
        COUNT(instituition) AS ci
FROM people AS p
JOIN education AS e ON p.id = e.person_id
WHERE company_id IN (SELECT DISTINCT c.id
        FROM company AS c
        JOIN funding_round AS f ON c.id = f.company_id
        WHERE status = 'closed'
            AND is_first_round  = 1
            AND is_last_round = 1)
GROUP BY p.id)

SELECT AVG(ci)
FROM a
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Напишите похожий запрос: выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники Facebook*.
*(сервис, запрещённый на территории РФ)

Решение:'''
WITH
a AS (SELECT  p.id,
                COUNT(instituition) AS ci
        FROM people AS p
        JOIN education AS e ON p.id = e.person_id
        WHERE company_id IN (SELECT DISTINCT c.id
                FROM company AS c
                JOIN funding_round AS f ON c.id = f.company_id
                WHERE c.name = 'Facebook')
        GROUP BY p.id)

SELECT AVG(ci)
FROM a
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Для каждой компании найдите количество учебных заведений, которые окончили её сотрудники. Выведите название компании и число уникальных названий учебных заведений. Составьте топ-5 компаний по количеству университетов.

Решение:'''
WITH
c AS (SELECT name, id
      FROM company),
p AS (SELECT company_id, id
     FROM people),
e AS (SELECT person_id, instituition
     FROM education)

SELECT name,
        COUNT(DISTINCT instituition) AS ci
FROM c
LEFT JOIN p ON c.id = p.company_id
LEFT JOIN e ON p.id = e.person_id
GROUP BY name
ORDER BY ci DESC
LIMIT 5;
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Проанализируйте, в каких странах находятся фонды, которые чаще всего инвестируют в стартапы. 
Для каждой страны посчитайте минимальное, максимальное и среднее число компаний, в которые инвестировали фонды этой страны, основанные с 2010 по 2012 год включительно. Исключите страны с фондами, у которых минимальное число компаний, получивших инвестиции, равно нулю. 
Выгрузите десять самых активных стран-инвесторов: отсортируйте таблицу по среднему количеству компаний от большего к меньшему. Затем добавьте сортировку по коду страны в лексикографическом порядке.

Решение:'''
WITH
a AS (SELECT f.country_code AS country,
        MIN(f.invested_companies) AS minimum,
        MAX(f.invested_companies) AS maximum,
        AVG(f.invested_companies) AS average
FROM fund AS f
WHERE EXTRACT(YEAR FROM founded_at) IN (2010,2011,2012)
GROUP BY f.country_code)

SELECT country, minimum, maximum, average
FROM a
WHERE minimum <> 0
ORDER BY average DESC, country
LIMIT 10;
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Для каждой из категорий, назначенных в предыдущем задании, посчитайте округлённое до ближайшего целого числа среднее количество инвестиционных раундов, в которых фонд принимал участие. Выведите на экран категории и среднее число инвестиционных раундов. Отсортируйте таблицу по возрастанию среднего.

Решение:'''
WITH
f AS (SELECT *,
       CASE
           WHEN invested_companies>=100 THEN 'high_activity'
           WHEN invested_companies>=20 THEN 'middle_activity'
           ELSE 'low_activity'
       END AS activity
FROM fund)

SELECT activity,
        ROUND(AVG(investment_rounds)) AS average
FROM f
GROUP BY activity
ORDER BY average
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Создайте поле с категориями:
Для фондов, которые инвестируют в 100 и более компаний, назначьте категорию high_activity.
Для фондов, которые инвестируют в 20 и более компаний до 100, назначьте категорию middle_activity.
Если количество инвестируемых компаний фонда не достигает 20, назначьте категорию low_activity.
Отобразите все поля таблицы fund и новое поле с категориями.

Решение:'''
SELECT *,
        CASE
            WHEN invested_companies > 99 THEN 'high_activity'
            WHEN invested_companies > 19 AND invested_companies < 100 THEN 'middle_activity'
            WHEN invested_companies < 20 THEN 'low_activity'
         END
FROM fund;
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Составьте таблицу, в которую войдёт дата проведения раунда, а также минимальное и максимальное значения суммы инвестиций, привлечённых в эту дату.
Оставьте в итоговой таблице только те записи, в которых минимальное значение суммы инвестиций не равно нулю и не равно максимальному значению.

Решение:'''
WITH
f AS (SELECT funded_at AS date,
        MIN(raised_amount) AS minimum,
        MAX(raised_amount) AS maximum
FROM funding_round
GROUP BY funded_at)

SELECT date,
        minimum,
        maximum
FROM f
WHERE minimum <> 0
    AND minimum <> maximum
-----------------------------------------------------------------------------------------------------------------------
'''Задача:
Выведите на экран всю информацию о людях, у которых названия аккаунтов в твиттере содержат подстроку 'money', а фамилия начинается на 'K'

Решение:'''
SELECT *
FROM people
WHERE twitter_username LIKE '%money%'
AND last_name LIKE 'K%'
